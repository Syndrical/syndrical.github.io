{"version":3,"sources":["components/Introduction.js","components/Experience/ExperienceUtil.js","components/Experience/WorkExperience.js","components/Experience/ProjectExperience.js","components/Experience/OtherExperience.js","components/Experience.js","components/Education.js","components/Contact.js","components/Codebox/CodeboxUtil.js","components/Codebox/LanguageExperience.js","components/Codebox/FrameworkExperience.js","components/Codebox/ToolsExperience.js","components/Codebox.js","App.js","serviceWorker.js","index.js"],"names":["Introduction","classes","root","flexGrow","card","paddingTop","paddingBottom","color","CardMedia","title","image","style","Typography","align","gutterBottom","variant","useStyles","makeStyles","container","maxWidth","padding","img","border","margin","display","maxHeight","borderRadius","objectFit","workExperience","id","place","location","duration","text","note","link","projectExperience","otherExperience","DisplayExperience","job","Container","key","className","Grid","spacing","item","alt","src","xs","sm","direction","justify","Box","fontWeight","fontStyle","Button","size","href","endIcon","WorkExperience","experience","map","ProjectExperience","OtherExperience","backgroundAttachment","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","p","a11yProps","About","theme","useTheme","React","useState","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","aria-label","centered","Tab","wrapped","label","icon","palette","type","dir","Divider","button","Education","fontFamily","justifyContent","avatar","width","height","backgroundColor","Avatar","IconButton","fontSize","languageExperience","name","frameworkExperience","toolExperience","marginBottom","popover","typography","anchorEl","setAnchorEl","open","Boolean","undefined","aria-describedby","onClick","currentTarget","fullWidth","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","LanguageExperience","List","component","language","FrameworkExperience","framework","ToolExperience","tool","description","paper","minWidth","Codingbox","Paper","themeObject","primary","main","secondary","themeName","App","setTheme","updatedTheme","useDarkMode","toggleDarkMode","themeConfig","createMuiTheme","FormControlLabel","control","Switch","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1e31ad9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CardMedia, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = () => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  card: {\r\n    paddingTop: 250,\r\n    paddingBottom: 250,\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default function Introduction() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardMedia\r\n      title=\"Winnipeg\"\r\n      image=\"winnipegdark.jpg\"\r\n      style={classes.card}\r\n    >\r\n      <Typography align=\"center\" gutterBottom variant=\"h2\">\r\n        Kevin Hoang\r\n      </Typography>\r\n\r\n      <Typography align=\"center\" gutterBottom variant=\"h5\">\r\n        Possibly another typical computer science student.\r\n      </Typography>\r\n    </CardMedia>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    maxWidth: 1100,\r\n    padding: 20,\r\n  },\r\n  image: {\r\n    maxWidth: 400,\r\n  },\r\n  img: {\r\n    border: '1px solid grey',\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n    borderRadius: 20,\r\n    objectFit: 'cover',\r\n  },\r\n}));\r\n\r\nexport const workExperience = [\r\n  {\r\n    id: '1',\r\n    title: 'Teaching Assistant',\r\n    place: 'University of Manitoba - Computer Science Department',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'September 2019 - CURRENT',\r\n    text: `Marked and provided feedback for labs to Introductory to Computer Science classes. Explained concepts to groups of students and helped facilitate communication / peer programming.`,\r\n    note: '',\r\n    image: 'classroom.jpg',\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Software Developer',\r\n    place: 'Varian Medical Systems',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'May 2019 - August 2019',\r\n    text: `Worked in teams of 7 to create a minimal marketable product cloud native application to replace an existing, outdated application. Explored Micronaut and providing an example to the company on how to use Micronaut, by making tests to a simple HTTP request program, to promote effective and reliable code release practices. Collaborated with project managers and designers for improved user experience. Used TypeScript and Angular`,\r\n    note: 'Co-op Work Term 3',\r\n    image: 'varian.jpg',\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Virtual / Augmented Reality Technology Assistant',\r\n    place: 'University of Manitoba – Rady Faculty of Health Sciences',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'July 2018 - April 2019',\r\n    text: `Taught the use of various virtual reality equipment to students and therapists. Worked with students and therapists on using virtual reality equipment on patients to provide effective, analytic data and efficient treatment plans.`,\r\n    image: 'virtualreality.jpg',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Application Developer',\r\n    place: 'Wawanesa Insurance',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'September 2018 - December 2018',\r\n    text: `Detected, investigated, and resolved bugs in discrete parts of different applications throughout the company. Constructed effective test cases using Karma and Jasmine to ensure the quality and usability of the application to achieved business standards. Created endpoints to utilize HTTP Requests to add in notifications about system maintenance / outtages to applications.  Collaborated with UX Designer to design and create UI additions with JavaScript, and Angular.js.`,\r\n    note: 'Co-op Work Term 2',\r\n    image: 'wawanesa.jpg',\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Programmer / Analyst',\r\n    place: 'Agriculture and Agri-Food Canada',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'January 2018 - August 2018',\r\n    text: `Enhanced the usability and maintainability of various applications within the department through refactoring to promote consistency of code structure and reusability. Composed and suggested various UI concepts and design changes to magnify user satisfaction and experience within the applications using Javascript, HTML, CSS, and JQuery. Reviewed code and assessed the impact of submitted changes to ensure reliability of the application.`,\r\n    note: 'Co-op Work Term 1',\r\n    image: 'agricultureagrifoods.jpg',\r\n  },\r\n  {\r\n    id: '6',\r\n    title: 'Undergraduate Researcher',\r\n    place: 'University of Manitoba - HCI Labs',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'May 2017 - August 2017',\r\n    text: `Created a sorting task environment in a virtual reality setting, using Unity, to test if different input mechanisms impacted both a user’s performance and immersion. Designed, coded, and tested the environment and interfaces in C# while conducting the study.`,\r\n    note: '',\r\n    image: 'uofm.jpg',\r\n    link: 'http://hci.cs.umanitoba.ca/people/bio/kevin-hoang',\r\n  },\r\n];\r\n\r\nexport const projectExperience = [\r\n  {\r\n    id: '1',\r\n    title: 'Personal Website',\r\n    place: 'Personal Project',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'April 2019 - CURRENT',\r\n    text: `A website dedicated to myself to both test my abilities in website development and design. Used React and Material-UI, along with HTML, CSS, and JavaScript.`,\r\n    note: '',\r\n    image: 'website.jpg',\r\n    link: 'https://github.com/Syndrical/syndrical.github.io/',\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'NotifyVR',\r\n    place: 'Group Project',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'March 2019',\r\n    text: `A class project to conduct pilot studies on an effective way to view notifications, using Unity, from a phone with an HTC Vive. Created for COMP 4020 - Human-Computer Interaction 2. Written in C#.`,\r\n    note: 'Class Project',\r\n    image: 'NotifyVR.jpg',\r\n    link: 'https://github.com/tizzir/VRNotifications',\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Shape Interpreter',\r\n    place: 'Group Project',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'February 2019',\r\n    text: `A simplified application that renders a 3D modal of the shape that the user draws in Virtual Reality. Created for COMP 4020 - Human-Computer Interaction 2. Written in C#.`,\r\n    note: 'Class Project',\r\n    image: 'ShapeInterpreter.jpg',\r\n    link: 'https://github.com/Syndrical/ShapeInterpreter',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Throw-GameVR',\r\n    place: 'Personal Project',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'December 2017',\r\n    text: `A carnival game to test out video game and virtual reality development in Unity. Throw balls to the moving target to keep yourself in the game! Written in C#.`,\r\n    note: '',\r\n    image: 'ThrowGame-Demo.gif',\r\n    link: 'https://github.com/Syndrical/ThrowGame-VR',\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Cow-Tris Adventures',\r\n    place: 'Group Project',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'December 2014',\r\n    text: `Collaborated with a team of 5 high-school students to develop a Tetris-like game involving cows. Used C#, C++, and Adobe Photoshop.`,\r\n    note: '',\r\n    image: 'cowtris.jpg',\r\n  },\r\n];\r\n\r\nexport const otherExperience = [\r\n  {\r\n    id: '1',\r\n    title: 'Webmaster',\r\n    place:\r\n      'University of Manitoba - Biomedical Engineering Design Team',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'April 2019 - CURRENT',\r\n    text: `Worked with other members and executives of University of Manitoba's Biomedical Engineering Design Team to create and manage the team's website using Wordpress.`,\r\n    note: '',\r\n    image: 'IMG_9399_EDIT.jpg',\r\n    link: 'https://uofmbmed.com/',\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Hype Crew',\r\n    place: 'Ignite Cycle & Strength',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'January 2020 - CURRENT',\r\n    text: `Worked with other members of Hype Crew to help set up, clean, and manage the studio, and interacted with riders during shifts to help pump them up and get engaged before and after cycling / strength classes.`,\r\n    note: '',\r\n    image: 'ignite.jpg',\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Hype Crew',\r\n    place: 'WPG Cycle',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'October 2019 - CURRENT',\r\n    text: `Worked with other members of Hype Crew to help set up, clean, and manage the studio, and interacted with riders during shifts to help pump them up and get engaged before and after cycling.`,\r\n    note: '',\r\n    image: 'wpgcycle.jpg',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Aesthetics Team',\r\n    place: 'University of Manitoba - Concrete Canoe',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'September 2019 - CURRENT',\r\n    text: `Worked with other members on the Aesthetics Team of University of Manitoba's Concrete Canoe to provide the logo, the color scheme of the team, as well as the design of the canoe itself.`,\r\n    note: '',\r\n    image: 'UMCCC_Logo.png',\r\n  },\r\n  {\r\n    id: '5',\r\n    title: 'Frontline Leader',\r\n    place: 'University of Manitoba',\r\n    location: 'Winnipeg, MB',\r\n    duration: 'September 2016 - April 2020',\r\n    text: `Worked with other volunteers as a Frontline Leader to assist with programs on campus such as Orientation. Prepared, managed and presented activities to small and big groups of people.`,\r\n    note: '',\r\n    image: 'uofm2.jpg',\r\n  },\r\n];\r\n\r\nexport const DisplayExperience = (job) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container key={job.id} className={classes.container}>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <Container className={classes.image}>\r\n            <img\r\n              className={classes.img}\r\n              alt=\"complex\"\r\n              src={job.image}\r\n            />\r\n          </Container>\r\n        </Grid>\r\n        <Grid item xs={12} sm container>\r\n          <Grid item xs container direction=\"column\" spacing={2}>\r\n            <Grid item xs>\r\n              <Grid container justify=\"space-between\" direction=\"row\">\r\n                <Grid item>\r\n                  <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    <Box fontWeight=\"fontWeightBold\">{job.title}</Box>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"button\" color=\"textPrimary\">\r\n                    {job.note}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n                <Box>{job.place}</Box>\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                <Box fontStyle=\"oblique\">{job.duration}</Box>\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                <Box>{job.text}</Box>\r\n              </Typography>\r\n            </Grid>\r\n            {job.link && (\r\n              <Grid item>\r\n                <Typography variant=\"caption\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    href={job.link}\r\n                    endIcon={<ForwardIcon />}\r\n                  >\r\n                    Click here for more\r\n                  </Button>\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n            <Grid item>\r\n              <Typography variant=\"overline\" color=\"textPrimary\">\r\n                <Box>{job.location}</Box>\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport * as experience from './ExperienceUtil';\r\n\r\nexport default function WorkExperience() {\r\n  return (\r\n    <div>\r\n      {experience.workExperience.map((job) =>\r\n        experience.DisplayExperience(job),\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport * as experience from './ExperienceUtil';\r\n\r\nexport default function ProjectExperience() {\r\n  return (\r\n    <div>\r\n      {experience.projectExperience.map((job) =>\r\n        experience.DisplayExperience(job),\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport * as experience from './ExperienceUtil';\r\n\r\nexport default function OtherExperience() {\r\n  return (\r\n    <div>\r\n      {experience.otherExperience.map((job) =>\r\n        experience.DisplayExperience(job),\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Divider,\r\n  CardMedia,\r\n} from '@material-ui/core';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport WorkExperience from './Experience/WorkExperience';\r\nimport ProjectExperience from './Experience/ProjectExperience';\r\nimport OtherExperience from './Experience/OtherExperience';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  image: {\r\n    backgroundAttachment: 'fixed',\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function About() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          aria-label=\"experience\"\r\n          centered\r\n        >\r\n          <Tab\r\n            wrapped\r\n            key=\"1\"\r\n            label=\"Work\"\r\n            icon={<WorkIcon />}\r\n            {...a11yProps(0)}\r\n          />\r\n          <Tab\r\n            wrapped\r\n            key=\"2\"\r\n            label=\"Projects\"\r\n            icon={<StorageIcon />}\r\n            {...a11yProps(1)}\r\n          />\r\n          <Tab\r\n            wrapped\r\n            key=\"3\"\r\n            label=\"Others\"\r\n            icon={<LibraryBooksIcon />}\r\n            {...a11yProps(2)}\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n      <CardMedia\r\n        className={classes.image}\r\n        title=\"Winnipeg\"\r\n        image={\r\n          theme.palette.type === 'light'\r\n            ? 'nature.jpg'\r\n            : 'darkbackground.jpg'\r\n        }\r\n      >\r\n        <TabPanel\r\n          key=\"4\"\r\n          value={value}\r\n          index={0}\r\n          dir={theme.direction}\r\n        >\r\n          <WorkExperience />\r\n        </TabPanel>\r\n        <TabPanel\r\n          key=\"5\"\r\n          value={value}\r\n          index={1}\r\n          dir={theme.direction}\r\n        >\r\n          <ProjectExperience />\r\n        </TabPanel>\r\n        <TabPanel\r\n          key=\"6\"\r\n          value={value}\r\n          index={2}\r\n          dir={theme.direction}\r\n        >\r\n          <OtherExperience />\r\n        </TabPanel>\r\n        <Divider />\r\n      </CardMedia>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  CardMedia,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    maxWidth: 1200,\r\n    padding: 50,\r\n    color: 'white',\r\n  },\r\n  image: {\r\n    backgroundAttachment: 'fixed',\r\n  },\r\n  button: {\r\n    padding: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nexport default function Education() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CardMedia\r\n      className={classes.image}\r\n      title=\"University of Manitoba - Bright Picture\"\r\n      image=\"uofmdark.jpg\"\r\n    >\r\n      <Divider />\r\n      <Container className={classes.container}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography align=\"center\" variant=\"h5\">\r\n                  <Box fontWeight=\"fontWeightBold\">\r\n                    University of Manitoba\r\n                  </Box>\r\n                </Typography>\r\n                <Typography\r\n                  gutterBottom\r\n                  align=\"center\"\r\n                  variant=\"subtitle2\"\r\n                >\r\n                  <Box fontStyle=\"oblique\">\r\n                    September 2015 - April 2020\r\n                  </Box>\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"subtitle2\">\r\n                  <Box>\r\n                    B. Sc. Bachelor of Computer Science, Honours\r\n                    (Co-op) / Minor in Psychology\r\n                  </Box>\r\n                </Typography>\r\n                <Typography align=\"center\" variant=\"subtitle1\">\r\n                  <Box fontFamily=\"Monospace\">GPA: 3.83 / 4.5</Box>\r\n                </Typography>\r\n                <Box justifyContent=\"center\" display=\"flex\">\r\n                  <Button\r\n                    style={{ margin: 10 }}\r\n                    color=\"inherit\"\r\n                    variant=\"outlined\"\r\n                    href=\"/Resume.pdf\"\r\n                  >\r\n                    Resume (PDF)\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Divider />\r\n    </CardMedia>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  IconButton,\r\n  Typography,\r\n  Box,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    maxWidth: 1000,\r\n    padding: 50,\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(15),\r\n    height: theme.spacing(15),\r\n  },\r\n}));\r\n\r\nexport default function Education() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div\r\n      style={\r\n        theme.palette.type === 'light'\r\n          ? { backgroundColor: '#ffffff' }\r\n          : { backgroundColor: '#212121' }\r\n      }\r\n    >\r\n      <Container className={classes.container}>\r\n        <Box justifyContent=\"center\" display=\"flex\">\r\n          <Avatar\r\n            className={classes.avatar}\r\n            alt=\"Kevin Hoang\"\r\n            src=\"me.jpg\"\r\n          />\r\n        </Box>\r\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h4\">\r\n          <Box>Contact Me</Box>\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n          variant=\"caption\"\r\n        >\r\n          <Box>Wanna connect? See more information? Let's talk. </Box>\r\n        </Typography>\r\n        <Box justifyContent=\"center\" display=\"flex\">\r\n          <IconButton href=\"mailto:kevinhoang9797@gmail.com\">\r\n            <MailIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <IconButton href=\"https://www.linkedin.com/in/kevin-hoang-cs-uofm/\">\r\n            <LinkedInIcon fontSize=\"large\" />\r\n          </IconButton>\r\n\r\n          <IconButton href=\"https://github.com/Syndrical\">\r\n            <GitHubIcon fontSize=\"large\" />\r\n          </IconButton>\r\n\r\n          <IconButton href=\"https://www.instagram.com/kevinhoang__/\">\r\n            <InstagramIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Typography, Popover } from '@material-ui/core';\r\n\r\nexport const languageExperience = [\r\n  {\r\n    id: '1',\r\n    name: 'C',\r\n    experience:\r\n      'Used for a couple of classes in university, teaching me the importance of testing and looking through code thoroughly.',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'C#',\r\n    experience:\r\n      'C# was the second language I learned, with me introduced to it along with group projects in high school. I have also used it with undergraduate research and personal projects when using Unity. ',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'C++',\r\n    experience:\r\n      'C++ was the first programming language I have learned when taking Computer Science in high school. This was also used in a couple of other classes in university. C++ allowed me to help understand how C works.',\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'CSS',\r\n    experience:\r\n      'Used for all work terms, some group projects, and some personal projects.',\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'HTML',\r\n    experience:\r\n      'Used for all work terms, some group projects, and some personal projects.',\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Java',\r\n    experience:\r\n      'Utilized throughout most classes in university. Java is also the language I use when explaining stuff as a Teacher Assistant.',\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'JavaScript',\r\n    experience:\r\n      'JavaScript was used during my first work term, as well as some assignments in university.',\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'Python',\r\n    experience:\r\n      'Used it for an assignment, as well as tinkered around in it in my own time.',\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'Ruby',\r\n    experience:\r\n      'Only used it in an assignment for a class in university.',\r\n  },\r\n  {\r\n    id: '10',\r\n    name: 'SQL',\r\n    experience:\r\n      'Learned it in a database class, required for a database specialization, as well as the first two work terms.',\r\n  },\r\n  {\r\n    id: '11',\r\n    name: 'TypeScript',\r\n    experience:\r\n      'TypeScript was the main language I used for my third work term.',\r\n  },\r\n  {\r\n    id: '12',\r\n    name: 'XML',\r\n    experience:\r\n      'Used for an assignment in a university course, and for describing data in undergraduate research.',\r\n  },\r\n];\r\n\r\nexport const frameworkExperience = [\r\n  {\r\n    id: '1',\r\n    name: 'AJAX',\r\n    experience:\r\n      'Used for an assignment for communication between server and client through streams and sockets.',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Angular',\r\n    experience:\r\n      'Utilized in my third work term. My experience with Angular.js in my second work term allowed me to adapt to the framework and TypeScript easily.',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Angular.js',\r\n    experience:\r\n      'Used in my second work term. This helped me learn how to utilize Angular in my third work term.',\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Ant Design',\r\n    experience:\r\n      'Used for a recent group project, which gave me idea to find other UI frameworks and discovered Material-UI.',\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Bootstrap',\r\n    experience:\r\n      'Bootstrap was the first framework I have ever used, with it being utilized in my first work term. ',\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Cucumber',\r\n    experience:\r\n      'Utilized in conjunction with Mocha as a complete testing architecture in my second work term.',\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'Jasmine',\r\n    experience:\r\n      'Used in conjunction with Mocha as a complete testing architecture in my first work term.',\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'jQuery',\r\n    experience:\r\n      'Utilized this framework for my first work term as well as some assignments in classes.',\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'Material-UI',\r\n    experience: 'Created this website with Material-UI.',\r\n  },\r\n  {\r\n    id: '10',\r\n    name: 'Micronaut',\r\n    experience:\r\n      'Testing framework used and research on for my third work term. This testing framework is now being utilized by multiple teams in Varian after I have left.',\r\n  },\r\n  {\r\n    id: '11',\r\n    name: 'Mocha',\r\n    experience:\r\n      'Used this testing framework at my first & second work term.',\r\n  },\r\n  {\r\n    id: '12',\r\n    name: 'React',\r\n    experience:\r\n      'Created this website with React. Also used React for a group project. ',\r\n  },\r\n  {\r\n    id: '13',\r\n    name: 'Redux',\r\n    experience:\r\n      'Used Redux as a state management framework to create a website for a group project made in React, as well as my third work term. ',\r\n  },\r\n];\r\n\r\nexport const toolExperience = [\r\n  {\r\n    id: '1',\r\n    name: 'Android Studio',\r\n    experience:\r\n      'Only used for a group project in a group project class called Software Engineering I.',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'BitBucket',\r\n    experience:\r\n      'Version Control tool used during work term 2. This allowed me to understand how git works visually.',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Confluence',\r\n    experience:\r\n      'Documenting tool used in work term 2 & 3. This allowed me to learn how to communicate through people with different backgrounds in programming.',\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Cruicible',\r\n    experience:\r\n      'A tool used for code reviewing, utilized in work term 2. This made me understand the importance of peer programming and code reviewing.',\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Eclipse',\r\n    experience:\r\n      'Only used for a single class in university, since it was recommended at the time and I was still new to different IDEs.',\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Git',\r\n    experience:\r\n      'Used git for about anything group related work regarding code throughout my journey, such as my three workterms, group projects, and this website. I use command line, GitHub Desktop, and built-in git in IDEs.',\r\n  },\r\n  {\r\n    id: '7',\r\n    name: 'IntelliJ',\r\n    experience:\r\n      'Utilized IntelliJ for all work terms, some personal projects, and assignments for the most part. IntelliJ is my go-to IDE, with VS Code being a close second.',\r\n  },\r\n  {\r\n    id: '8',\r\n    name: 'JIRA',\r\n    experience:\r\n      'Used JIRA for tracking bugs within projects in some group projects and all work terms.',\r\n  },\r\n  {\r\n    id: '9',\r\n    name: 'npm',\r\n    experience:\r\n      'Used npm for all work terms, some group projects, and this website, specifically for installing and managing dependencies.',\r\n  },\r\n  {\r\n    id: '10',\r\n    name: 'Unity',\r\n    experience:\r\n      'Utilized Unity for anything virtual reality development related, such as ShapeInterpreter, Throw-GameVR, and undergraduate research.',\r\n  },\r\n  {\r\n    id: '11',\r\n    name: 'Visual Studio',\r\n    experience:\r\n      'Used Visual Studio throughout high school when learning C++, including Cow-Tris Adventures, as well as a couple assignments in university.',\r\n  },\r\n  {\r\n    id: '12',\r\n    name: 'Visual Studio Code',\r\n    experience:\r\n      'Utilized Visual Studio Code when making this website, as well as a couple of group projects and assignments. I have grown to like VS Code alot, almost over IntelliJ.',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  popover: {},\r\n  typography: {\r\n    maxWidth: 300,\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const DisplayExperience = (type) => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div key={type.id}>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"outlined\"\r\n        onClick={handleClick}\r\n        className={classes.button}\r\n        fullWidth\r\n      >\r\n        {type.name}\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        className={classes.popover}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          {type.experience}\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport * as experience from './CodeboxUtil';\r\n\r\nexport default function LanguageExperience() {\r\n  return (\r\n    <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n      {experience.languageExperience.map((language) =>\r\n        experience.DisplayExperience(language),\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport * as experience from './CodeboxUtil';\r\n\r\nexport default function FrameworkExperience() {\r\n  return (\r\n    <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n      {experience.frameworkExperience.map((framework) =>\r\n        experience.DisplayExperience(framework),\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport * as experience from './CodeboxUtil';\r\n\r\nexport default function ToolExperience() {\r\n  return (\r\n    <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n      {experience.toolExperience.map((tool) =>\r\n        experience.DisplayExperience(tool),\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  CardMedia,\r\n  Grid,\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Divider,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport LanguageExperience from './Codebox/LanguageExperience';\r\nimport FrameworkExperience from './Codebox/FrameworkExperience';\r\nimport ToolsExperience from './Codebox/ToolsExperience';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  container: {\r\n    padding: theme.spacing(5),\r\n  },\r\n  description: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  paper: {\r\n    minWidth: 250,\r\n    padding: theme.spacing(3),\r\n  },\r\n  image: {\r\n    backgroundAttachment: 'fixed',\r\n  },\r\n}));\r\n\r\nexport default function Codingbox() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <CardMedia\r\n      className={classes.image}\r\n      title=\"University of Manitoba - Bright Picture\"\r\n      image={\r\n        theme.palette.type === 'light'\r\n          ? 'lightcode.jpg'\r\n          : 'darkcode.jpg'\r\n      }\r\n    >\r\n      <Divider />\r\n      <Container className={classes.container}>\r\n        <Typography align=\"center\" variant=\"h5\" color=\"textPrimary\">\r\n          <Box fontWeight=\"fontWeightBold\">The Encounter Box</Box>\r\n        </Typography>\r\n        <Typography\r\n          className={classes.description}\r\n          variant=\"caption\"\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n        >\r\n          <Box fontStyle=\"oblique\">\r\n            These are the different kinds of programming-related\r\n            topics that I've experienced. Experience mileage may vary.\r\n          </Box>\r\n        </Typography>\r\n        <Grid container justify=\"space-evenly\" spacing={2}>\r\n          <Grid item>\r\n            <Paper className={classes.paper}>\r\n              {' '}\r\n              <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n                <Box>Languages</Box>\r\n              </Typography>\r\n              <LanguageExperience />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Paper className={classes.paper}>\r\n              {' '}\r\n              <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n                <Box>Frameworks</Box>\r\n              </Typography>\r\n              <FrameworkExperience />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Paper className={classes.paper}>\r\n              {' '}\r\n              <Typography gutterBottom variant=\"h6\" align=\"center\">\r\n                <Box>Tools</Box>\r\n              </Typography>\r\n              <ToolsExperience />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Divider />\r\n    </CardMedia>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n  MuiThemeProvider,\r\n  Switch,\r\n  FormControlLabel,\r\n  Box,\r\n  AppBar,\r\n} from '@material-ui/core';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Introduction from './components/Introduction';\r\nimport Experience from './components/Experience';\r\nimport Education from './components/Education';\r\nimport Contact from './components/Contact';\r\nimport Codebox from './components/Codebox';\r\n\r\nconst themeObject = {\r\n  palette: {\r\n    primary: { main: '#053f5b' },\r\n    secondary: { main: '#053f5b' },\r\n    type: 'light',\r\n  },\r\n  themeName: 'Website Text',\r\n};\r\n\r\nconst useDarkMode = () => {\r\n  const [theme, setTheme] = useState(themeObject);\r\n  const {\r\n    palette: { type },\r\n  } = theme;\r\n  const toggleDarkMode = () => {\r\n    const updatedTheme = {\r\n      ...theme,\r\n      palette: {\r\n        ...theme.palette,\r\n        type: type === 'light' ? 'dark' : 'light',\r\n      },\r\n    };\r\n    setTheme(updatedTheme);\r\n  };\r\n  return [theme, toggleDarkMode];\r\n};\r\n\r\nexport default function App() {\r\n  const [theme, toggleDarkMode] = useDarkMode();\r\n\r\n  const themeConfig = createMuiTheme(theme);\r\n  return (\r\n    <div className=\"app\">\r\n      <MuiThemeProvider theme={themeConfig}>\r\n        <AppBar position=\"fixed\" color=\"default\">\r\n          <Box justifyContent=\"center\" display=\"flex\">\r\n            <FormControlLabel\r\n              label=\"Toggle Light/Dark Mode\"\r\n              control={<Switch onClick={toggleDarkMode} />}\r\n            />\r\n          </Box>\r\n        </AppBar>\r\n        <Introduction />\r\n        <Experience />\r\n        <Education />\r\n        <Codebox />\r\n        <Contact />\r\n      </MuiThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}